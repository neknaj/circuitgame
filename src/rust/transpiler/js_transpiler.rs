use crate::vm::types::*;

pub fn transpile(module: Module) -> Result<String,String> {
    if module.gates_symmetry.len()>0 {
        return Err(format!("JS transpiler does not support symmetry module: {}",module.name));
    }
    if !module.func {
        return Err(format!("JS transpiler does not support non-func module: {}",module.name));
    }
    else {
        let out_const = format!(
            "export const {}OutputsLen = {};",
            module.name,
            module.outputs.len(),
        );
        let out_func_head = format!(
            "export function {}({})",
            module.name,
            (0..module.inputs as usize).map(|i| format!("b{}",i+module.gates_sequential.len())).collect::<Vec<String>>().join(", "),
        );
        let out_func_gates = module.gates_sequential.iter().enumerate().map(|(index,value)| format!("    const b{} = !( b{} || b{} );",index,value.0,value.1)).collect::<Vec<String>>().join("\n");
        let out_func_return = format!(
            "    return {{ outputs: [ {} ] }};",
            module.outputs.iter().map(|value| format!("b{}",value)).collect::<Vec<String>>().join(", "),
        );
        let out_func = format!(
            "{} {{\n{}\n{}\n}}",
            out_func_head,
            out_func_gates,
            out_func_return,
        );
        let out_code = format!(
            "{}\n\n{}\n\n{}",
            "// Generated by Neknaj Circuit Game",
            out_const,
            out_func,
        );
        Ok(out_code)
    }
}