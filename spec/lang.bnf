<file> := <components>

<components> := <component> <components> | ε
<component> := <using> | <import> | <module> | <funcModule> | <graphical> | <test>

<mName> := /([0-9a-zA-Z]|_)+/
<mId> := /([0-9a-zA-Z]|_)+/
<int> := /[0-9]+/
<fileName> := "\"" ( not '\"' )+ "\"" | ( not ( <Space> | not ) ";" )+

<mType> := <int> <rArrow> <int>
<mTypeConcrete> := <int> <rArrow> <int>
<mIds> := <mId> <mIds> | ε
<mIO> := "(" <mIds> ")"

<rArrow> := ">" | "->" | "=>" | "~>"
<lArrow> := "<" | "<-" | "<=" | "<~"
<import_keyword> := "import" | "Import" | "IMPORT"
<export_keyword> := "export" | "Export" | "EXPORT"
<using_keyword> := "using" | "Using" | "USING" | "use" | "Use" | "USE"
<module_keyword> := "module" | "Module" | "MODULE" | "def" | "Def" | "DEF"
<func_module_keyword> := "func" | "Func" | "FUNC" | "fn" | "Fn" | "FN"
<graphical_keyword> := "graphical" | "Graphical" | "GRAPHICAL"
<test_keyword> := "test" | "Test" | "TEST"
<true>  := "t" | "T" | "h" | "H" | "1"
<false> := "f" | "F" | "l" | "L" | "0"
<gate_separator> := ":" | "=" | ":=" | "::="

<using> := <using_keyword> <mName> ":" <mType> ";"
<import> := <import_keyword> "{" <importModules> "}" <from_keyword> <fileName> ";"
<module> := <export_keyword>? <module_keyword> <mName> <mIO> <rArrow> <mIO> "{" <gates> "}"
<funcModule> := <export_keyword>? <func_module_keyword> <mName> <mIO> <rArrow> <mIO> "{" <gates> "}"
<test> := <test_keyword> <mName> ":" <mType> "{" <testPatterns> "}"

<importModule> := <mId>
<importModules> := <importModule> <importModules> | ε

<gate> := <mIds> <gate_separator> <mName> <lArrow>? <mIds> ";"
<gates> := <gate> <gates> | ε

<bool> := <true> | <false>
<values> := <bool> <values> | ε
<testPattern> := <values> <rArrow> <values> ";"
<testPatterns> := <testPattern> <testPatterns> | ε


<graphical> := <graphical_keyword> <mName> ":" <imgSize> "{" <pixels> "}"
<imgSize> := "auto" | /[0-9]+/ "x"? /[0-9]+/
<coord> := /[0-9]+/ /[0-9]+/
<color> := "#" /[0-9]{6}/
<ioIndex> := ("i"|"I") /[0-9]+/ | ("o"|"O") /[0-9]+/
<pixel> := <coord> <gate_separator> <ioIndex> <lArrow>? <color> <color> ";"
<pixels> := <pixel> <pixels> | ε


# 以下は、色んな所に入れられるが、BNFが読みにくくなるので、上記の文法からは消し去ってある

# コメント, 空白 (無視される)

<LineComment> := ("//") /[^\r\n]/ ( "\n" | "\r\n" )

<Space> := " " | "," | "\t" | "\n" | "\r"
# <file>直下と、<module>,<using>の{}直前と中で使える, コメントを許す
<Separator> := ( <Space>+ | <LineComment> )*
# <mId>と<bool>の区切りに使える, コメントを許さない
<ValueSeparator> := <Space>*



# マクロ機能 (評価して展開される)

<macro_define> := "!" <macro_expr> <macroTypeAnnotation>
<macro_expr> := <macro_func_call_no_args> | <macro_func_call> | <macro_chain>
<macro_chain> := "{" <macro_chained_func_call> "}"
<macro_chained_func_call> := <macro_func_call> <macro_chained_func_call> | ε
<macroTypeAnnotation> := ":" <macroType>
<macroType> := /[a-zA-Z_][0-9a-zA-Z_]*/
<macro_func_call_no_args> := <macro_func_name>
<macro_func_call> := "(" <macro_func_name> <macro_func_args> ")"
<macro_func_args> := <macro_expr> <macro_func_args> | ε
<macro_literal> := <macro_number> | <macro_variable> | <macro_string> | <macro_vector>
<macro_vector> := "[" <macro_vector_members> "]"
<macro_vector_members> := <macro_expr> <macro_vector_members> | ε
<macro_number> := '-'? /[0-9]+/
<macro_variable> := /[a-zA-Z_][0-9a-zA-Z_]*/
<macro_string> := "\"" <macro_string_letters> "\""
<macro_string_letters> := <macro_string_letter> <macro_string_letters> | ε
<macro_string_letter> := <macro_string_letter_escaped> | ( not '\"' )
<macro_string_letter_escaped> := "\\0" | "\\'" | "\\\"" | "\\\\" | "\\n" | "\\r" | "\\v" | "\\t" | "\\b" | "\\f"